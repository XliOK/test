name: Upload to Aliyun OSS

on:
  workflow_dispatch:

jobs:
  prepare_jobs:
    runs-on: ubuntu-latest
    outputs:
      matrices: ${{ steps.set_matrix.outputs.matrices }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Get branches
      id: set_matrix
      run: |
        import json
        from subprocess import check_output

        branches = check_output(['git', 'branch', '-a']).decode('utf-8').split('\n')
        numeric_branches = []

        for branch in branches:
          branch = branch.replace('*', '').strip()
          if not branch.startswith('remotes/origin/'):
            continue
          branch = branch.replace('remotes/origin/', '')
          if branch.isnumeric():
            numeric_branches.append(branch)

        # Split branches into 20 sublists
        chunk_size = (len(numeric_branches) + 19) // 20
        chunks = [numeric_branches[i:i + chunk_size] for i in range(0, len(numeric_branches), chunk_size)]

        print(f'::set-output name=matrices::{json.dumps(chunks)}')

  upload_to_oss:
    runs-on: ubuntu-latest
    needs: prepare_jobs
    strategy:
      matrix:
        include:
          - index: 0
            branches: ${{ needs.prepare_jobs.outputs.matrices[0] }}
          - index: 1
            branches: ${{ needs.prepare_jobs.outputs.matrices[1] }}
          - index: 2
            branches: ${{ needs.prepare_jobs.outputs.matrices[2] }}
          - index: 3
            branches: ${{ needs.prepare_jobs.outputs.matrices[3] }}
          - index: 4
            branches: ${{ needs.prepare_jobs.outputs.matrices[4] }}
          - index: 5
            branches: ${{ needs.prepare_jobs.outputs.matrices[5] }}
          - index: 6
            branches: ${{ needs.prepare_jobs.outputs.matrices[6] }}
          - index: 7
            branches: ${{ needs.prepare_jobs.outputs.matrices[7] }}
          - index: 8
            branches: ${{ needs.prepare_jobs.outputs.matrices[8] }}
          - index: 9
            branches: ${{ needs.prepare_jobs.outputs.matrices[9] }}
          - index: 10
            branches: ${{ needs.prepare_jobs.outputs.matrices[10] }}
          - index: 11
            branches: ${{ needs.prepare_jobs.outputs.matrices[11] }}
          - index: 12
            branches: ${{ needs.prepare_jobs.outputs.matrices[12] }}
          - index: 13
            branches: ${{ needs.prepare_jobs.outputs.matrices[13] }}
          - index: 14
            branches: ${{ needs.prepare_jobs.outputs.matrices[14] }}
          - index: 15
            branches: ${{ needs.prepare_jobs.outputs.matrices[15] }}
          - index: 16
            branches: ${{ needs.prepare_jobs.outputs.matrices[16] }}
          - index: 17
            branches: ${{ needs.prepare_jobs.outputs.matrices[17] }}
          - index: 18
            branches: ${{ needs.prepare_jobs.outputs.matrices[18] }}
          - index: 19
            branches: ${{ needs.prepare_jobs.outputs.matrices[19] }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install oss2

    - name: Upload files to OSS
      run: |
        import os
        import oss2
        from pathlib import Path

        branches = ${{ matrix.branches }}

        # Setup Aliyun OSS
        auth = oss2.Auth(os.environ['ALIID'], os.environ['ALIKEY'])
        bucket = oss2.Bucket(auth, 'oss-cn-beijing.aliyuncs.com', 'zqb-client')

        for branch in branches:
          # Checkout the specific branch
          os.system(f'git checkout {branch}')

          # Upload the files to OSS
          for root, dirs, files in os.walk('.'):
            for file in files:
            filepath = os.path.join(root, file)
            relative_path = Path(filepath).relative_to('.')
            oss_path = f'zqb/branches/195270/{branch}/{relative_path}'
            bucket.put_object_from_file(oss_path, filepath)
            print(f'Uploaded {filepath} to {oss_path}')
