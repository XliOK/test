name: Sync Repository

on:
  schedule:
    - cron: '0 3 * * *' # 设置定时任务，每天凌晨0点运行
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] # 增加 group，将分支分成20个批次处理

    steps:
    - name: Checkout source repository
      uses: actions/checkout@v2
      with:
        repository: 'xxTree/ManifestAutoUpdate'
        fetch-depth: 1 # 只获取最新的提交

    - name: Setup git
      run: |
        git config --global user.email "lixi442860990@gmail.com"
        git config --global user.name "L"

    - name: Sync target repository
      run: |
        git remote add target https://XliOK:${{ secrets.KEY4 }}@github.com/XliOK/test.git
        git fetch target --depth 1 # 只获取最新的提交
        for branch in $(git branch -r | grep -Eo "origin/[0-9]+" | grep -Eo "[0-9]+" | awk "NR % 20 == ${{ matrix.group }}-1"); do
          local_branch=origin/$branch
          target_branch=refs/remotes/target/$branch
          origin_latest_hash=$(git rev-parse $local_branch)
          # 检查目标分支引用是否存在
          if git show-ref --quiet $target_branch; then
            target_latest_hash=$(git rev-parse $target_branch)
          else
            echo "Target branch $target_branch not found. Creating."
            git push target $local_branch:refs/heads/$branch
            continue
          fi
          if [ "$origin_latest_hash" != "$target_latest_hash" ]; then
            if [ "$branch" != "11150" ]; then
              git checkout --track $local_branch

              # 获取源分支的文件列表
              git ls-files > source_files.txt

              # 获取目标分支的文件列表
              git checkout $target_branch
              git ls-files > target_files.txt
              git checkout $local_branch

              # 将源分支中的文件复制到目标分支，保留目标分支中已删除的文件
              while read file; do
                if [ -e "$file" ]; then
                  git checkout $target_branch -- "$file" || true
                fi
              done < source_files.txt

              # 添加并提交更改
              git add .
              git commit -m "Sync updated files from source repository"
              # 将更改推送到目标分支
              git push --force --tags --verbose target "refs/heads/$branch" --
            fi
          fi
        done
